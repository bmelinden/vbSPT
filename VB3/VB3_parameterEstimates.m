function est=VB3_parameterEstimates(M)
% est=VB3_parameterEstimates(M)
% generate some estimates based on a M-field. Good for interpreting various
% 'true' models, e.g., those generated by knowing the hidden states etc.
% M : input M field of some model
% est : those parameter estimates that can be done based on the M field
% alone, same as done by VB3_VBEMiterator

%% copyright notice
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% VB3_parameterEstimates, generate some estimates based on a M-field
% =========================================================================
% 
% Copyright (C) 2013 Martin Lind√©n and Fredrik Persson
% 
% E-mail: bmelinden@gmail.com, freddie.persson@gmail.com
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This program is free software: you can redistribute it and/or modify it
% under the terms of the GNU General Public License as published by the
% Free Software Foundation, either version 3 of the License, or any later
% version.   
% This program is distributed in the hope that it will be useful, but
% WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
% Public License for more details.
%
%  Additional permission under GNU GPL version 3 section 7
%  
%  If you modify this Program, or any covered work, by linking or combining it
%  with Matlab or any Matlab toolbox, the licensors of this Program grant you 
%  additional permission to convey the resulting work.
%
% You should have received a copy of the GNU General Public License along
% with this program. If not, see <http://www.gnu.org/licenses/>.


%% actual code
N=length(M.wPi);

% global light-weight estimates (always)
wa0=sum(M.wa,2);
est.aMean=M.wa(:,1)./wa0;
est.aMode=(M.wa(:,1)-1)./(wa0-2);
est.aVar=M.wa(:,1).*M.wa(:,2)./(wa0.^2.*(1+wa0));

wB0=sum(M.wB,2)*ones(1,N);
eyeB=1-eye(N);
est.Bmean=M.wB./wB0;
est.Bmode=(M.wB-1+eye(N))./(wB0-N+1);
est.Bvar=M.wB.*(wB0.*eyeB-M.wB)./(wB0.^2.*(1+wB0));
B2=M.wB.*(eyeB+M.wB)./(wB0.*(1+wB0));  % <Bjk^2>

est.Amean=diag(M.wa(:,2)./sum(M.wa,2))...
    +(M.wa(:,1)./sum(M.wa,2)./sum(M.wB,2))*ones(1,N).*M.wB;
%est.Amode : have not figured that one out yet (ML 2014-05.02)
est.Astd=diag(est.aVar)...
    +(est.aVar*ones(1,N)).*B2...
    +(est.aMean.^2*ones(1,N)).*est.Bvar;

est.dwellMean=1./est.aMean;
est.dwellMode=wa0./(1+M.wa(:,1));
clear wB0 eyeB B2 wa0

% emission parameters
est.gMean=M.n./M.c;
est.gMode=(M.n-1)./M.c;
est.gStd=sqrt(M.n./M.c.^2); % sqrt(Var(g))
est.DdtMean=M.c/4./(M.n-1);
est.DdtMode=M.c/4./(M.n+1);
est.Ddtstd=M.c/4./(M.n-1)./sqrt(M.n-2);



