


function vbSPTgui(~,varargin)
% vbSPTgui(~,varargin)
%
% Initiates a graphical user interface for the vbSPT software.

%% copyright notice
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% vbSPTgui.m, provides a graphical user inferface for the vbSPT package
% =========================================================================
% 
% Copyright (C) 2012 Martin Lind?n and Fredrik Persson
% 
% E-mail: bmelinden@gmail.com, freddie.persson@gmail.com
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This program is free software: you can redistribute it and/or modify it
% under the terms of the GNU General Public License as published by the
% Free Software Foundation, either version 3 of the License, or any later
% version.   
% This program is distributed in the hope that it will be useful, but
% WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
% Public License for more details.
%
% You should have received a copy of the GNU General Public License along
% with this program. If not, see <http://www.gnu.org/licenses/>.
%% start of actual code

% Find folder where this file is and add subfolders to the Matlab path
p = mfilename('fullpath');
[p, ~, ~] = fileparts(p);
addpath(p)
addpath(genpath([p filesep 'VB3']))
addpath(genpath([p filesep 'HMMcore']))
addpath(genpath([p filesep 'Tools']))
disp('Added local VB3 paths')
disp('---------------------')


% Reset and clear everything
clear all;
close(findobj('Tag','hmR'));

f1 = figure('Visible', 'off');

% Create main figure
hFig = figure(...
    'Units','pixels',...
    'Tag','hmR',...
    'MenuBar','none',...
    'Toolbar','none',...
    'NumberTitle','off',...
    'Visible','off',...
    'Position',[0 0 1 1],...
    'Resize','off',...
    'Colormap',hot);

%Font name
font = 'Ariel';
fontsize = 13;

if ispc || isunix 
    fontsize = fontsize*(72/96); 
end

%Draw all the panes etc
drawContent(hFig, font, fontsize);

% Set window visible
movegui(hFig,'north');
set(hFig,'Visible','on');

close(f1);

end



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Draw GUI content functions %
% ========================== %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function drawContent(hObject,varargin)

% Delete previous content
delete(get(hObject,'Children'));

% Set name of window
set(hObject,'Name','Create Runinputfile');


% Dimensions for panels
panelWidth = 450;
panelHeight = 325;

delim = 10;

buttonRowHeight = 30;

% Total size of the figure
totHeight = buttonRowHeight + delim + panelHeight + delim + panelHeight + delim;
totWidth = delim + panelWidth + delim;

% Positions for the 2 panels
topPosY = 2*delim+panelHeight+buttonRowHeight;
bottomPosY = delim + buttonRowHeight;

set(hObject,'Position',[0 0 totWidth totHeight]);

%System font
font = varargin{1};
fontsize = varargin{2};

% Button Row Panel
hButtonPanel = uibuttongroup(...
    'Parent',hObject,...
    'Tag','mR_panel_buttonRow',...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'Color'),...
    'visible','on',...
    'BorderType','none',...
    'Position',[0 0 totWidth buttonRowHeight]);
uiButtonRowPanel(hButtonPanel, 0, fontsize, font);

% Settings Panel
hSettingsPanel = uibuttongroup(...
    'Parent',hObject,...
    'Tag','mR_panel_Settings',...
    'Title','Settings',...
    'FontName', font ,...
    'FontSize',10,...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'Color'),...
    'Position',[delim topPosY panelWidth panelHeight]);
uiSettingsPanel(hSettingsPanel, 0, fontsize, font);

% Parameters Panel
hParametersPanel = uibuttongroup(...
    'Parent',hObject,...
    'Tag','mR_panel_tracking',...
    'Title','Parameters',...
    'FontName', font ,...
    'FontSize',10,...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'Color'),...
    'Position',[delim bottomPosY panelWidth panelHeight]);
uiParametersPanel(hParametersPanel, 0, fontsize, font);

end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Panel construction functions %
% ============================ %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function uiButtonRowPanel(hObject,~,varargin)

% Dimensions
pos = get(hObject,'Position');
w = pos(3);

% Button size
bw = 90; bh = 25;

% Positions for the buttons
x1 = 20; x2 = 20+(bw/2); x3 = 20+(2*bw); x4=20+(3.1*bw); x5 = w-(75);

% Close button
uicontrol(...
    'Parent',hObject,...
    'Units','pixels',...
    'Style','pushbutton',...
    'String','Close',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x5 10 bw*2/3 bh],...
    'Callback',{@CloseButton});

% Load data
uicontrol(...
    'Parent',hObject,...
    'Units','pixels',...
    'Style','pushbutton',...
    'TooltipString','Load',...
    'String','Load Script',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x4 10 bw bh],...
    'Callback',{@LoadButton});

% Show result
uicontrol(...
    'Parent',hObject,...
    'Units','pixels',...
    'Style','pushbutton',...
    'TooltipString','Load',...
    'String','Show Result',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x3 10 bw bh],...
    'Callback',{@ShowButton});

% Save a .mat file.
uicontrol(...
    'Parent',hObject,...
    'Units','pixels',...
    'Style','pushbutton',...
    'TooltipString','Saves and runs the script file',...
    'String','Save & Run',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x2 10 bw bh],...
    'Enable', 'on',...
    'Callback',{@SaveRunButton});

% Save a .m file.
uicontrol(...
    'Parent',hObject,...
    'Units','pixels',...
    'Style','pushbutton',...
    'TooltipString','Saves a matlab script file.',...
    'String','Save',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 10 bw/2 bh],...
    'Enable', 'on',...
    'Callback',{@SaveScriptButton});

end

function uiSettingsPanel(hObject,~,varargin)

% Dimensions
pos = get(hObject,'Position');

% Global height
h = pos(4);

% Label height/width
lw = 180; lh = 25;

% Button height/width
bw = 90; bh = 25;

% Edit box height/width
ew = 50;


% Start positions
x1 = 10;
x2 = x1 + 100;
x3 = x2 + 100;
x4 = x3 + 100;

y1 = h - (20 + lh);
y2 = y1 - (lh);
y3 = y2 - (lh);
y4 = y3 - (lh);
y5 = y4 - (lh);
y6 = y5 - (lh);
y7 = y6 - (lh);
y8 = y7 - (lh);
y9 = y8 - (lh);
y10 = y9 - (lh);
y11 = y10 - (lh);
y12 = y11 - (lh);
y13 = y12 - (lh);


% Choose input data
uicontrol(...
    'Parent',hObject,...
    'Units','pixels',...
    'Style','pushbutton',...
    'Tag','mR_SP_inputButton',...
    'TooltipString','Choose data file.',...
    'String','Input data',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y1 bw bh],...
    'Visible', 'on',...
    'Callback',{@InputButton});
uicontrol(...
    'Parent',hObject,...
    'Style','text',...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'FontSize',varargin{end-1},...
    'HorizontalAlignment','left',...
    'String','-',...
    'FontName', varargin{end} ,...
    'Position',[x2 y2-5 lw*1.5 2*lh],...
    'Tag','mR_SP_inputname');


% Trajectory field to use from the .mat input file 
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_SP_trajfield_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'FontSize',varargin{end-1},...
    'HorizontalAlignment','left',...
    'String','Trajectory field:',...
    'FontName', varargin{end} ,...
    'Position',[x1 y3-4 ew*2 lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','popup',...
    'Tag','mR_SP_trajfield_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'FontSize',varargin{end-1},...
    'TooltipString','The field in the .mat input file that contains the relevant trajectories.',...
    'String','-',...
    'FontName', varargin{end} ,...
    'Callback',{},...
    'Position',[x2 y3 1.5*lw lh],...
    'Visible', 'on');


% Choose result file to save
uicontrol(...
    'Parent',hObject,...
    'Units','pixels',...
    'Style','pushbutton',...
    'Tag','mR_SP_outputButton',...
    'TooltipString','Choose data file.',...
    'String','Output data',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y4 bw bh],...
    'Visible', 'on',...
    'Callback',{@OutputButton});
uicontrol(...
    'Parent',hObject,...
    'Style','text',...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'HorizontalAlignment','left',...
    'String','-',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x2 y5-5 lw*1.5 2*lh],...
    'Tag','mR_SP_outputname');


% Parallel computing
uicontrol(...	% Checkbox
    'Parent',hObject,...
    'Style','checkbox',...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'TooltipString','Choose if you want to run Matlab in parallel computing mode.',...
    'String','Run in parallel mode',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y6 lw lh],...
    'Callback',{},...
    'Tag','mR_SP_parallel_1',...
    'Value', 1,...
    'Enable','on');

% Extra estimates, Viterbi etc
uicontrol(...	% Checkbox
    'Parent',hObject,...
    'Style','checkbox',...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'TooltipString','Choose if you want to compute extra estimates including Viterbi paths (computationally costly).',...
    'String','Additional estimates',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x3 y6 lw lh],...
    'Callback',{},...
    'Tag','mR_SP_viterbi_1',...
    'Value', 1,...
    'Enable','on');


uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_SP_bootstrap_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Bootstraps:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y7-4 2*ew lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','edit',...
    'Tag','mR_SP_bootstrap_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','The number of bootstrap resamplings. Set to 0 to disable bootstrapping.',...
    'String','100',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x3 y7 ew lh],...
    'Visible', 'on');

% Full bootstrapping
uicontrol(...	% Checkbox
    'Parent',hObject,...
    'Style','checkbox',...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'TooltipString','Choose if you want to bootstrap the best model for each model size (computationally costly).',...
    'String','FULL Bootstrapping',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x4 y7 lw lh],...
    'Callback',{},...
    'Tag','mR_SP_fullBootstrap_1',...
    'Value', 1,...
    'Enable','on');


% Number of runs
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_SP_runs_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Number of runs:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y8-4 lw lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','edit',...
    'Tag','mR_SP_runs_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','The number of attempts at each model size (make a multiple of number of cores when using parallel computing).',...
    'String','25',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x3 y8 ew lh],...
    'Visible', 'on');


% Number of hidden states to consider
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_SP_hidden_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Max # hidden states:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y9-4 4*ew lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','edit',...
    'Tag','mR_SP_hidden_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','The maximum number of hidden states to consider. Aim for ~2 times the anticipated number',...
    'String','10',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x3 y9 ew lh],...
    'Visible', 'on');

% Min # points in trajectory
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_SP_minTraj_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Min. trajectory length:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y10-4 lw lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','edit',...
    'Tag','mR_SP_minTraj_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','Minimum number of points in a trajectory to include it in the analysis.',...
    'String','2',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x3 y10 ew lh]);

% Information text
uicontrol(...
    'Parent',hObject,...
    'Style','text',...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'FontSize',varargin{end-1},...
    'HorizontalAlignment','left',...
    'String','Advanced users can find additional settings in the generated script.',...
    'FontName', varargin{end} ,...
    'Position',[x4-ew y12 lw 1.5*lh],...
    'Tag','mR_SP_info');

end

function uiParametersPanel(hObject,~,varargin)
% Dimensions
pos = get(hObject,'Position');

% Global height
h = pos(4);

% Label height/width
lw = 180; lh = 25;

% Button height/width
bw = 90; bh = 25;

% Edit box height/width
ew = 50;


% Start positions
x1 = 10;
x2 = x1 + 100;
x3 = x2 + 100;
x4 = x3 + 100;

y1 = h - (20 + lh);
y2 = y1 - (lh);
y3 = y2 - (lh);
y4 = y3 - (lh);
y5 = y4 - (lh);
y6 = y5 - (lh);
y7 = y6 - (lh);
y8 = y7 - (lh);
y9 = y8 - (lh);
y10 = y9 - (lh);
y11 = y10 - (lh);
y12 = y11 - (lh);

% Length unit of the data
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_PP_lUnit_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Unit of length:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y1-4 lw lh]);
uicontrol(...	% Popup meny
    'Parent',hObject,...
    'Style','popup',...
    'Tag','mR_PP_lUnit_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','Unit of length for the data.',...
    'String','nm|um',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Enable', 'off',...
    'Position',[x1+2*ew y1 1.5*ew lh]);

% Timestep
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_PP_timestep_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Timestep [s]:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y2-4 lw lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','edit',...
    'Tag','mR_PP_timestep_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','The time between sampling for the tracking data. This sets the unit time for the analysis.',...
    'String','0.003',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x1+2.5*ew y2 ew lh]);


% Initial guessing intervals
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_PP_initialRange_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Ranges for initial guesses:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y4-4 lw lh]);

% Initial guessing interval for diffusion
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_PP_diffRange_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Diff. coeff. [um^2/s]:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y5-4 lw lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','edit',...
    'Tag','mR_PP_diffRange_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','The lower limit for initial random guesses for the diffusion coefficients. However, the final value is NOT limited to this range.',...
    'String','0.01',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x1+2.5*ew y5 ew lh]);
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_PP_diffRange_3',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','center',...
    'String','to',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1+3.5*ew y5-4 ew/2 lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','edit',...
    'Tag','mR_PP_diffRange_4',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','The upper limit for initial random guesses for the diffusion coefficients. However, the final value is NOT limited to this range.',...
    'String','5',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x1+4*ew y5 ew lh]);


% Initial guessing interval for dwelltime
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_PP_dwelltimeRange_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Dwelltime [s]:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y6-4 lw lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','edit',...
    'Tag','mR_PP_dwelltimeRange_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','The lower limit for initial random guesses for the dwelltimes of states. However, the final value is NOT limited to this range.',...
    'String','0.01',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x1+2.5*ew y6 ew lh]);
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_PP_dwelltimeRange_3',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','center',...
    'String','to',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1+3.5*ew y6-4 ew/2 lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','edit',...
    'Tag','mR_PP_dwelltimeRange_4',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','The upper limit for initial random guesses for the dwelltimes of states. However, the final value is NOT limited to this range.',...
    'String','10',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x1+4*ew y6 ew lh]);

% Information text
uicontrol(...
    'Parent',hObject,...
    'Style','text',...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'FontSize',varargin{end-1},...
    'HorizontalAlignment','left',...
    'String','Choose a reasonable range for initial guesses. Within an order of magnitude from the expected values.',...
    'FontName', varargin{end} ,...
    'Position',[x4-0.9*ew y6 lw 2.1*lh],...
    'Tag','mR_PP_info');


% Dimensionality of the data
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_PP_dim_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Dimensionality:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x3 y1-4 lw lh]);
uicontrol(...	% Popup meny
    'Parent',hObject,...
    'Style','popup',...
    'Tag','mR_PP_dim_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','Dimensionality of the data (the first Dim columns of the coordinate matrices will be used).',...
    'String','1|2|3',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x3+2*ew y1 1.5*ew lh]);

% Job ID input
uicontrol(...	% Title
    'Parent',hObject,...
    'Style','text',...
    'Tag','mR_PP_jobID_1',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'HorizontalAlignment','left',...
    'String','Job ID:',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y8-4 lw lh]);
uicontrol(...	% Value edit box
    'Parent',hObject,...
    'Style','edit',...
    'Tag','mR_PP_jobID_2',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'Units','pixels',...
    'TooltipString','Write a note describing the analysis job.',...
    'String','---------------',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Callback',{},...
    'Position',[x2 y8 lw*1.5 lh]);
uicontrol(...
    'Parent',hObject,...
    'Units','pixels',...
    'Style','pushbutton',...
    'Tag','mR_PP_generateIDButton',...
    'TooltipString','Generates a template ID.',...
    'String','Generate ID',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x4 y9 bw bh],...
    'Visible', 'on',...
    'Callback',{@GenerateIDButton});

% Script name
uicontrol(...
    'Parent',hObject,...
    'Units','pixels',...
    'Style','text',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'HorizontalAlignment','left',...
    'String','Script: ',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y10 lw lh],...
    'Tag','mR_PP_scriptName_1');
uicontrol(...
    'Parent',hObject,...
    'Style','text',...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'HorizontalAlignment','left',...
    'String',['NOT SAVED'],...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x2 y10 lw*1.5 lh],...
    'Tag','mR_PP_scriptName_2');
% Local script folder
uicontrol(...
    'Parent',hObject,...
    'Units','pixels',...
    'Style','text',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'HorizontalAlignment','left',...
    'String','Local folder: ',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x1 y11 lw lh],...
    'Tag','mR_PP_scriptFolder_1');
uicontrol(...
    'Parent',hObject,...
    'Style','text',...
    'Units','pixels',...
    'BackgroundColor',get(hObject,'BackgroundColor'),...
    'HorizontalAlignment','left',...
    'String','-',...
    'FontName', varargin{end} ,...
    'FontSize',varargin{end-1},...
    'Position',[x2 y11-0.5*lh lw*1.5 1.5*lh],...
    'Tag','mR_PP_scriptFolder_2');



end



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Button callback functions %
% ========================= %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function CloseButton(~,varargin)

close(findobj('Tag','hmR'));

end

function LoadButton(~,varargin)

LoadData;
ShowResult('fromLoadButton');

end

function ShowButton(~,varargin)

ShowResult;

end

function InputButton(~,varargin)

% Get filename and path with "uigetfile"
[filename, pathname] = uigetfile({'*.mat'}, 'Select struct file (.mat)');
if ( filename == 0 )
    warndlg('VBgui : No file selected!');
    return
end

input_full_filename = [ pathname, filename ];

% Put fields as alternatives in dropdown menu
vars = whos('-file', input_full_filename);
fields = {vars.name};
set(findobj('Tag','mR_SP_trajfield_2'),'String',fields);

% Put in the file and pathname in the GUI, relative path if possible
scriptFolder = get(findobj('Tag','mR_PP_scriptFolder_2'),'String');
relPath = strrep(input_full_filename, scriptFolder, ['.' filesep]);

if strcmp(scriptFolder, '-')
    set(findobj('Tag','mR_SP_inputname'),'String',input_full_filename);
elseif ~strcmp(input_full_filename, relPath)
    set(findobj('Tag','mR_SP_inputname'),'String',relPath);
else
    warndlg('VBgui : The input and output files must be located in a subfolder to the script. Try rechoosing the input and outputfiles.');
    return
end


end

function OutputButton(~,varargin)

if ~strcmp(get(findobj('Tag','mR_SP_inputname'),'String'), '-')
    % Assume template filename and path from the input.
    tempName = get(findobj('Tag','mR_SP_inputname'),'String');
    trajfield = get(findobj('Tag','mR_SP_trajfield_2'),'String');
    trajfield = trajfield{get(findobj('Tag','mR_SP_trajfield_2'),'Value')};
    tempName = strrep(tempName, '.mat', strcat('_', trajfield, '_', strrep(date, '-', '_'), '_HMMresult.mat'));
    
    % Get filename and path with "uigetfile"
    [filename, pathname] = uiputfile({'*.mat'}, 'Select struct file (.mat)', tempName);
else
    % Get filename and path with "uigetfile"
    [filename, pathname] = uiputfile({'*.mat'}, 'Select struct file (.mat)');
end

if ( filename == 0 )
    warndlg('VBgui : No file selected!');
    return
end

output_full_filename = [ pathname, filename];

% Put in the file and pathname in the GUI, relative path if possible
scriptFolder = get(findobj('Tag','mR_PP_scriptFolder_2'),'String');
relPath = strrep(output_full_filename, scriptFolder, ['.' filesep]);

if strcmp(scriptFolder, '-')
    set(findobj('Tag','mR_SP_outputname'),'String',output_full_filename);
elseif ~strcmp(output_full_filename, relPath)
    set(findobj('Tag','mR_SP_outputname'),'String',relPath);
else
    warndlg('VBgui : The input and output files must be located in a subfolder to the script. Try rechoosing the input and outputfiles.');
    return
end

end

function GenerateIDButton(~,varargin)

% Assume template filename and path from the input.
[~, filename, ext] = fileparts(get(findobj('Tag','mR_SP_inputname'),'String'));
trajfield = get(findobj('Tag','mR_SP_trajfield_2'),'String');
trajfield = trajfield{get(findobj('Tag','mR_SP_trajfield_2'),'Value')};

if strcmp(trajfield, '-') || strcmp(filename, '-')
    warndlg('VBgui : Input file and/or trajectory field has not been chosen yet.');
    return;
else
    % Put in the Job ID in the GUI.
    set(findobj('Tag','mR_PP_jobID_2'),'String',['Data from ', strcat(filename, ext), ' :: ', trajfield, ' from_', date, '.']);
end

end

function SaveScriptButton(~,varargin)

SaveScript;

end

function SaveRunButton(~, varargin)

SaveScript;
RunScript;

end



%%%%%%%%%%%%%%%%%%%
% Other functions %
% =============== %
%%%%%%%%%%%%%%%%%%%


function SaveScript(~,varargin)

if strcmp(get(findobj('Tag','mR_PP_scriptName_2'),'String'), 'NOT SAVED')
    % Get filename and path with "uigetfile" and a generic filename
    [filename, pathname] = uiputfile({'*.m'}, 'Select Runinput name (.m)', strcat('runinput_', strrep(date, '-', '_'), '.m'));
else
    % Get filename and path with "uigetfile" and the current filename
    [filename, pathname] = uiputfile({'*.m'}, 'Select Runinput name (.m)', [get(findobj('Tag','mR_PP_scriptFolder_2'),'String'), get(findobj('Tag','mR_PP_scriptName_2'),'String')]);
    
end

if filename == 0
    warndlg('VBgui : No file selected!');
    return
end

% Change to the folder where it shall be saved
oldFolder = cd(pathname);

% Set the script name and path
set(findobj('Tag','mR_PP_scriptName_2'),'String', filename);
set(findobj('Tag','mR_PP_scriptFolder_2'),'String', pathname);


% Change all paths to relative paths from the runinput file
totPath = get(findobj('Tag','mR_SP_inputname'),'String');
scriptFolder = get(findobj('Tag','mR_PP_scriptFolder_2'),'String');

if totPath(1) == '.' &&  ~strcmp(scriptFolder, '-')
    totPath = strrep(totPath, ['.' filesep], get(findobj('Tag','mR_PP_scriptFolder_2'),'String'));    
elseif totPath(1) == '.' &&  strcmp(scriptFolder, '-')
    warndlg('VBgui : Relative paths without defined script folder.');
    return 
end

relPath = strrep(totPath, pathname, ['.' filesep]);

if strcmp(relPath, totPath)
    warndlg('VBgui : The input and output files must be located in a subfolder to the script.');
    return
else
    set(findobj('Tag','mR_SP_inputname'),'String', relPath);
end

totPath = get(findobj('Tag','mR_SP_outputname'),'String');

if totPath(1) == '.' &&  ~strcmp(scriptFolder, '-')
    totPath = strrep(totPath, ['.' filesep], get(findobj('Tag','mR_PP_scriptFolder_2'),'String'));
    relPath = strrep(totPath, pathname, ['.' filesep]);
elseif totPath(1) == '.' &&  strcmp(scriptFolder, '-')
    warndlg('VBgui : Relative paths without defined script folder.');
    return
end

relPath = strrep(totPath, pathname, ['.' filesep]);

if strcmp(relPath, totPath)
    warndlg('VBgui : The input and output files must be located in a subfolder to the script.');
    return
else
    set(findobj('Tag','mR_SP_outputname'),'String', relPath);
end


% Calculate prior diff coeff and dwelltime from the initial guess range,
% prior_D = sqrt(str2num(get(findobj('Tag','mR_PP_diffRange_2'),'String'))*str2num(get(findobj('Tag','mR_PP_diffRange_4'),'String')))*1e6;        % in nm^2/s
% prior_tD = sqrt(str2num(get(findobj('Tag','mR_PP_dwelltimeRange_2'),'String'))*str2num(get(findobj('Tag','mR_PP_dwelltimeRange_4'),'String'))); % in seconds

% Get a fileID to write to the file. Will overwrite any existing file...
fID = fopen(filename, 'w');

% Find the trajectory fieldname
field = get(findobj('Tag','mR_SP_trajfield_2'),'String');
field = field{get(findobj('Tag','mR_SP_trajfield_2'),'Value')};

fprintf(fID, '%s\r\n',...
    '%% VB-HMM analysis parameter file generated by VBgui %%',...
    '',...
    '% Fredrik Persson & Martin Linden 2012-06-13',...
    '',...
    '% This is a GUI generated HMM analysis runinput file, which specifies',...
    '% everything the code needs to know about how to analyze a particular data',...
    '% set.',...
    '% To run the HMM analysis manually type:',...
    '% >> VB3_HMManalysis(''runinputfilename'')',...
    '',...
    '',...
    '% Inputs',...
    ['inputfile = ', '''', get(findobj('Tag','mR_SP_inputname'),'String'), '''', ';'],...
    ['trajectoryfield = ', '''', field, '''', ';'],...
    '',...
    '% Computing strategy',...
    ['parallelize_config = ', num2str(get(findobj('Tag','mR_SP_parallel_1'),'Value')), ';'],...
    'parallel_start = ''matlabpool open'';  % executed before the parallelizable loop.',...
    'parallel_end = ''matlabpool close''; % executed after the parallelizable loop.',...
    '',...
    '% Saving options',...
    ['outputfile = ', '''', get(findobj('Tag','mR_SP_outputname'),'String'), '''', ';'],...
    ['jobID = ', '''', get(findobj('Tag','mR_PP_jobID_2'),'String'), '''', ';'],...
    '',...
    '% Data properties',...
    ['timestep = ', get(findobj('Tag','mR_PP_timestep_2'),'String'), ';'],...
    ['dim = ', num2str(get(findobj('Tag','mR_PP_dim_2'),'Value')), ';'],...
    ['trjLmin = ', get(findobj('Tag','mR_SP_minTraj_2'),'String'), ';'],...
    '',...
    '% Convergence and computation alternatives',...
    ['runs = ', get(findobj('Tag','mR_SP_runs_2'),'String'), ';'],...
    ['maxHidden = ', get(findobj('Tag','mR_SP_hidden_2'),'String'), ';'],...
    '',...
    '% Evaluate extra estimates including Viterbi paths',...
    ['stateEstimate = ', num2str(get(findobj('Tag','mR_SP_viterbi_1'),'Value')), ';'],...
    '',...
    'maxIter = [];    % maximum number of VB iterations ([]: use default values)',...
    'relTolF = 1e-8;  % convergence criterion for relative change in likelihood bound.',...
    'tolPar = [];     % convergence criterion for M-step parameters (leave non-strict).',...
    '',...
    '% Bootstrapping',...
    ['bootstrapNum = ', get(findobj('Tag','mR_SP_bootstrap_2'),'String'), ';'],...
    ['fullBootstrap = ', num2str(get(findobj('Tag','mR_SP_fullBootstrap_1'),'Value')), ';'],...
    '',...
    '% Limits for initial conditions',...
    ['init_D = [', get(findobj('Tag','mR_PP_diffRange_2'),'String'), ', ', get(findobj('Tag','mR_PP_diffRange_4'),'String'), ']*1e6;   % interval for diffusion constant initial guess in nm^2/s.'],...
    ['init_tD = [', get(findobj('Tag','mR_PP_dwelltimeRange_2'),'String'), ', ', get(findobj('Tag','mR_PP_dwelltimeRange_4'),'String'), '];     % interval for mean dwell time initial guess in s.'],...
    '',...
    '% Prior distributions',...
    '% The priors are generated by taking the geometrical average of the initial guess range.',...
    '% units: same time units as timestep, same length unit as input data',...
    'prior_piStrength = 5;  % prior strength of initial state distribution (assumed uniform)',...
    'prior_D = 1e6;         % prior diffusion constant in nm^2/s',...
    'prior_Dstrength = 5;   % strength of diffusion constant prior, number of pseudocounts (positive)',...
    'prior_tD = 10*timestep;      % prior dwell time in seconds',...
    'prior_tDstrength = 2*prior_tD/timestep;  % transition rate strength (number of pseudocounts). Recommended to be at least 2*prior_tD/timestep',...
    '');

fclose(fID);

end

function RunScript(~, varargin)

    eval(strcat('VB3_HMManalysis(''', get(findobj('Tag','mR_PP_scriptName_2'),'String'), ''');'));

end

function LoadData(varargin)

% Get filename and path with "uigetfile"
[filename, pathname] = uigetfile({'*.m'}, 'Select script file (.m)');
if ( filename == 0 )
     warndlg('VBgui : No file selected!');
    return
end

full_filename = [ pathname, filename ];

[~, name, ~] = fileparts(full_filename);

oldFolder = cd(pathname);

% try to see if it is a valid runinput file with all its variables
try
    eval(name)
    inputfile;
    outputfile;
    trajectoryfield;
    parallelize_config;
    jobID;
    timestep;
    dim;
    trjLmin;
    runs;
    maxHidden;
    maxIter;
    relTolF;
    tolPar;
    stateEstimate;
    init_D;
    init_tD;
    prior_piStrength;
    prior_D;
    prior_Dstrength;
    prior_tD;
    prior_tDstrength;

catch err
    warndlg(['VBgui : ' filename ' does not appear to be a valid runinputfile with all required variables, aborting.']);
    return;
end

% % Make complete paths for the input and output filenames
% [path, ~, ~] = fileparts(inputfile);
% inputfile = strrep(inputfile, [path filesep], pathname);
% [path, ~, ~] = fileparts(outputfile);
% outputfile = strrep(outputfile, ['.' filesep], pathname);

% try to read look into the inputfile
try
    vars = whos('-file', inputfile);
    fields = {vars.name};
    fieldNum = find(ismember(fields, trajectoryfield)==1);
catch err
    warndlg(['VBgui : ' inputfilename ' could not be found, aborting.']);
    return;
end
    
% Update the fields in Settings
set(findobj('Tag', 'mR_SP_inputname'), 'String', inputfile);
set(findobj('Tag', 'mR_SP_trajfield_2'), 'String', fields);
set(findobj('Tag', 'mR_SP_trajfield_2'), 'Value', fieldNum);
set(findobj('Tag', 'mR_SP_outputname'), 'String', outputfile);
set(findobj('Tag', 'mR_SP_parallel_1'), 'Value', parallelize_config);
set(findobj('Tag', 'mR_SP_viterbi_1'), 'Value', stateEstimate);
set(findobj('Tag', 'mR_SP_bootstrap_2'), 'String', num2str(bootstrapNum));
set(findobj('Tag', 'mR_SP_fullBootstrap_1'), 'Value', fullBootstrap);
set(findobj('Tag', 'mR_SP_runs_2'), 'String', num2str(runs));
set(findobj('Tag', 'mR_SP_hidden_2'), 'String', num2str(maxHidden));
set(findobj('Tag', 'mR_SP_minTraj_2'), 'String', num2str(trjLmin));



% Update the fields in Parameters
set(findobj('Tag', 'mR_PP_timestep_2'), 'String', num2str(timestep));
set(findobj('Tag', 'mR_PP_dim_2'), 'Value', dim);
set(findobj('Tag', 'mR_PP_jobID_2'), 'String', jobID);
set(findobj('Tag', 'mR_PP_scriptName_2'), 'String', filename);
set(findobj('Tag', 'mR_PP_scriptFolder_2'), 'String', pathname);
set(findobj('Tag', 'mR_PP_diffRange_2'), 'String', num2str(init_D(1)/1e6));
set(findobj('Tag', 'mR_PP_diffRange_4'), 'String', num2str(init_D(2)/1e6));
set(findobj('Tag', 'mR_PP_dwelltimeRange_2'), 'String', num2str(init_tD(1)));
set(findobj('Tag', 'mR_PP_dwelltimeRange_4'), 'String', num2str(init_tD(2)));


clear all;

end


function ShowResult(varargin)

clc

pathname = get(findobj('Tag', 'mR_PP_scriptFolder_2'), 'String');
filename = get(findobj('Tag', 'mR_PP_scriptName_2'), 'String');

oldFold = cd(pathname);
opt = VB3_getOptions(filename);
try
    VB3_getResult(opt);
catch err
    % ignore if called when loading new data
    if nargin>0
        return
    else
        warndlg(['VBgui : ' opt.outputfile ' could not be found, aborting.']);
        return;
    end
end
end




















